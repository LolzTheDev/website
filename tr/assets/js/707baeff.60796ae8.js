"use strict";(self.webpackChunk_sern_website=self.webpackChunk_sern_website||[]).push([[9226],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=p(n),m=i,f=d["".concat(s,".").concat(m)]||d[m]||c[m]||a;return n?r.createElement(f,l(l({ref:t},u),{},{components:n})):r.createElement(f,l({ref:t},u))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:i,l[1]=o;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7827:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var r=n(7462),i=(n(7294),n(3905));const a={id:"EventType",title:"Enumeration: EventType",sidebar_label:"EventType",sidebar_position:0,custom_edit_url:null},l=void 0,o={unversionedId:"api/enums/EventType",id:"api/enums/EventType",title:"Enumeration: EventType",description:"A bitfield that discriminates event modules",source:"@site/docs/api/enums/EventType.md",sourceDirName:"api/enums",slug:"/api/enums/EventType",permalink:"/tr/docs/api/enums/EventType",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"EventType",title:"Enumeration: EventType",sidebar_label:"EventType",sidebar_position:0,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"CommandType",permalink:"/tr/docs/api/enums/CommandType"},next:{title:"PayloadType",permalink:"/tr/docs/api/enums/PayloadType"}},s={},p=[{value:"Enumeration Members",id:"enumeration-members",level:2},{value:"Discord",id:"discord",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"External",id:"external",level:3},{value:"Defined in",id:"defined-in-1",level:4},{value:"Sern",id:"sern",level:3},{value:"Defined in",id:"defined-in-2",level:4}],u={toc:p},d="wrapper";function c(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"A bitfield that discriminates event modules"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"Example"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export default eventModule({\n    //highlight-next-line\n    type : EventType.Discord,\n    name : 'guildMemberAdd'\n    execute(member : GuildMember) {\n        console.log(member)\n    }\n})\n")),(0,i.kt)("h2",{id:"enumeration-members"},"Enumeration Members"),(0,i.kt)("h3",{id:"discord"},"Discord"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"Discord")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"1")),(0,i.kt)("p",null,"The EventType for handling discord events"),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sern-handler/handler/blob/81cdde2/src/core/structures/enums.ts#L51"},"src/core/structures/enums.ts:51")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"external"},"External"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"External")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"3")),(0,i.kt)("p",null,"The EventType for handling external events.\nCould be for example, ",(0,i.kt)("inlineCode",{parentName:"p"},"process")," events, database events"),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sern-handler/handler/blob/81cdde2/src/core/structures/enums.ts#L60"},"src/core/structures/enums.ts:60")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"sern"},"Sern"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"Sern")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"2")),(0,i.kt)("p",null,"The EventType for handling sern events"),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/sern-handler/handler/blob/81cdde2/src/core/structures/enums.ts#L55"},"src/core/structures/enums.ts:55")))}c.isMDXComponent=!0}}]);