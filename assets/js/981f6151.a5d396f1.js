"use strict";(self.webpackChunksern_website=self.webpackChunksern_website||[]).push([[6052],{5982:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>d,default:()=>c,frontMatter:()=>a,metadata:()=>i,toc:()=>l});var s=t(4848),o=t(8453);const a={sidebar_position:4},d="First Command",i={id:"guide/walkthrough/first-command",title:"First Command",description:"We will dissect a basic command.",source:"@site/docs/guide/walkthrough/first-command.md",sourceDirName:"guide/walkthrough",slug:"/guide/walkthrough/first-command",permalink:"/docs/guide/walkthrough/first-command",draft:!1,unlisted:!1,editUrl:"https://github.com/sern-handler/website/edit/main/docs/guide/walkthrough/first-command.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Transition from v2 to v3",permalink:"/docs/guide/walkthrough/transition"},next:{title:"First Event Module",permalink:"/docs/guide/walkthrough/first-event"}},r={},l=[{value:"Types of command modules",id:"types-of-command-modules",level:3}];function m(e){const n={a:"a",admonition:"admonition",br:"br",code:"code",h1:"h1",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",tabitem:"tabitem",tabs:"tabs",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"first-command",children:"First Command"}),"\n",(0,s.jsxs)(n.p,{children:["We will dissect a basic command.\nIf you installed a new project via the cli, This is the ",(0,s.jsx)(n.code,{children:"ping"})," command located in src/commands folder."]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"TLDR: command modules are discord bot commands. There are many types, and each one will correspond to an event from discord.\nFor example, CommandType.Slash commands will listen to slash command interactions."})}),"\n",(0,s.jsx)(n.p,{children:"import Tabs from '@theme/Tabs';\nimport TabItem from '@theme/TabItem';"}),"\n",(0,s.jsxs)(n.tabs,{children:["\n",(0,s.jsxs)(n.tabitem,{value:"js",label:"JavaScript",children:["\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const { CommandType, commandModule } = require('@sern/handler');\n\nexport default commandModule({\n\ttype: CommandType.Both,\n\tplugins: [],\n\tdescription: 'A ping command',\n\t// alias : [],\n\texecute: async (ctx, args) => {\n\t\tawait ctx.reply('Pong \ud83c\udfd3');\n\t},\n})\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.tabitem,{value:"ts",label:"Typescript",children:["\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { commandModule, CommandType } from '@sern/handler';\n\nexport default commandModule({\n\ttype: CommandType.Both,\n\tplugins: [],\n\tdescription: 'A ping command',\n\t// alias : [],\n\texecute: async (ctx, args) => {\n\t\tawait ctx.reply({ content: 'Pong \ud83c\udfd3' });\n\t},\n});\n\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["To view what each of these properties mean in depth, visit the ",(0,s.jsx)(n.a,{href:"https://sern.dev/docs/api/enums/CommandType",children:"official documentation"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"types-of-command-modules",children:"Types of command modules"}),"\n",(0,s.jsxs)(n.p,{children:["Every command module ",(0,s.jsx)(n.code,{children:"type"})," is part of an enum. This field allows type inference for the rest of a module's fields. ",(0,s.jsx)(n.br,{}),"\nAll the command types can be found in the ",(0,s.jsx)(n.a,{href:"https://sern.dev/docs/api/enums/CommandType",children:"official documentation"}),"!"]}),"\n",(0,s.jsx)(n.p,{children:"So, lets say you want to make a command module that listens to modals. "}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Note"}),": Keep in mind you'll need to send a modal with a custom id ",(0,s.jsx)(n.code,{children:"dm-me"}),". This example below is the response to a modal being sent.\n",(0,s.jsx)(n.br,{})]}),"\n",(0,s.jsxs)(n.tabs,{children:["\n",(0,s.jsxs)(n.tabitem,{value:"js",label:"JavaScript",children:["\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-javascript",children:"const { CommandType, commandModule } = require('@sern/handler');\nexports.default = commandModule({\n        name: 'dm-me',\n        type: CommandType.Modal,\n        async execute (modal) {\n            const value = modal.fields.getTextInputValue('message');\n            modal.client.users.fetch('182326315813306368').then( u =>\n                u.send(value + ` from ${modal.user}`)\n            );\n            modal.reply( { ephemeral:true, content: 'Sent' })\n        }\n});\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.tabitem,{value:"ts",label:"Typescript",children:["\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import { commandModule, CommandType } from '@sern/handler';\nexport default commandModule({\n        name: 'dm-me',\n        type: CommandType.Modal,\n        async execute (modal) {\n            const value = modal.fields.getTextInputValue('message');\n            modal.client.users.fetch('182326315813306368').then( u =>\n                u.send(value + ` from ${modal.user}`)\n            );\n            modal.reply( { ephemeral:true, content: 'Sent' })\n        }\n});\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Commands are straight forward. Keep in mind, every other property on the commandModule object is\noptional ",(0,s.jsx)(n.strong,{children:"except"})," the type and execute function."]}),"\n",(0,s.jsx)(n.h1,{id:"context-class",children:"Context class"}),"\n",(0,s.jsxs)(n.p,{children:["The provided Context class helps with modules of ",(0,s.jsx)(n.code,{children:"CommandType.Both"})," (A mixture of slash / legacy commands)."]}),"\n",(0,s.jsx)(n.p,{children:"The Context class is passed into modules with type:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"CommandType.Both"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"CommandType.Slash"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"CommandType.Text"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This data structure helps interop between legacy commands and slash commands with ease."})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>i});var s=t(6540);const o={},a=s.createContext(o);function d(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);