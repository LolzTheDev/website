"use strict";(self.webpackChunk_sern_website=self.webpackChunk_sern_website||[]).push([[3295],{6829:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var i=t(4848),r=t(8453);const s={sidebar_position:1},o="Goal",a={id:"guide/walkthrough/goal",title:"Goal",description:"This walkthrough will be written in TypeScript but will have JavaScript snippets throughout.",source:"@site/docs/guide/walkthrough/goal.md",sourceDirName:"guide/walkthrough",slug:"/guide/walkthrough/goal",permalink:"/docs/guide/walkthrough/goal",draft:!1,unlisted:!1,editUrl:"https://github.com/sern-handler/website/edit/main/docs/guide/walkthrough/goal.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Preparing to Code",permalink:"/docs/guide/getting-started/preparing"},next:{title:"Create a new project",permalink:"/docs/guide/walkthrough/new-project"}},l={},d=[{value:"Using @sapphire/framework",id:"using-sapphireframework",level:3},{value:"Using @sern/handler",id:"using-sernhandler",level:3}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"goal",children:"Goal"}),"\n",(0,i.jsxs)(n.p,{children:["This walkthrough will be written in ",(0,i.jsx)(n.a,{href:"https://www.typescriptlang.org/",children:"TypeScript"})," but will have JavaScript snippets throughout."]}),"\n",(0,i.jsx)(n.h1,{id:"make-robust-modular-bots",children:"Make robust, modular, bots"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"Modularity"}),":  sern is built with modularity in mind. You can swap pieces and parts easily."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"Familiar"}),": commands and structures are similar to classic v12 handlers and the official discord.js command handler guide, while packing many features"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"Concise"}),": Too much code is a liability. with sern, write less for more \ud83e\udd2f"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"using-sapphireframework",children:"Using @sapphire/framework"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'title="commands/ping.ts" showLineNumbers',children:"import { Command } from '@sapphire/framework'\nimport type { CommandInteraction } from 'discord.js'\n\nexport class PingCommand extends Command {\n  public constructor(context: Command.Context) {\n    super(context, {\n      description: 'Pong!',\n      chatInputCommand: {\n        register: true,\n      },\n    })\n  }\n  public async chatInputRun(interaction: CommandInteraction) {\n    await interaction.reply('Pong!')\n  }\n}\n"})}),"\n",(0,i.jsx)(n.h3,{id:"using-sernhandler",children:"Using @sern/handler"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",metastring:'title="commands/ping.ts" showLineNumbers',children:"import { commandModule, CommandType } from '@sern/handler'\nimport { publish } from '../plugins';\n\nexport default commandModule({ \n    type: CommandType.Both,\n    plugins: [publish()],\n    description: 'Pong!',\n    execute: (ctx, args) => {\n        await ctx.reply('Pong!')\n    }\n})\n"})}),"\n",(0,i.jsx)(n.p,{children:"Keep in mind the above example acts as both a slash command AND text command"})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var i=t(6540);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);