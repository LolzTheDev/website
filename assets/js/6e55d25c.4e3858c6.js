"use strict";(self.webpackChunksern_website=self.webpackChunksern_website||[]).push([[5116],{6232:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>c});var s=i(4848),r=i(8453);const t={},l=void 0,o={id:"cli/publish",title:"publish",description:"Implicits",source:"@site/docs/cli/publish.md",sourceDirName:"cli",slug:"/cli/publish",permalink:"/docs/cli/publish",draft:!1,unlisted:!1,editUrl:"https://github.com/sern-handler/website/edit/main/docs/cli/publish.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"extra",permalink:"/docs/cli/extra"},next:{title:"Introduction",permalink:"/docs/guide/"}},a={},c=[{value:"Implicits",id:"implicits",level:2},{value:"Usage",id:"usage",level:2},{value:"Features",id:"features",level:2},{value:"Config",id:"config",level:2},{value:"Prerequiring",id:"prerequiring",level:2},{value:"Example: command published in guild",id:"example-command-published-in-guild",level:3},{value:"Script ran:",id:"script-ran",level:4}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"Usage: sern commands publish [options] [path]\n\nNew way to manage your slash commands\n\nArguments:\n  path                          path with respect to current working directory that will locate all published files\n\nOptions:\n  -i, --import [scriptPath...]  Prerequire a script to load into publisher\n  -t, --token [token]\n  --appId [applicationId]\n  -h, --help                    display help for command\n"})}),"\n",(0,s.jsx)(n.h2,{id:"implicits",children:"Implicits"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Automatically reads a .env in the working directory. For seamless integration, your .env file should look like this:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-txt",metastring:'title=".env" ',children:"DISCORD_TOKEN=<YOUR_TOKEN>\nAPPLICATION_ID=<YOUR_APPLICATION_ID>\nNODE_ENV=<production|development>\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Calls the discord API with the ",(0,s.jsx)(n.a,{href:"https://discord.com/developers/docs/interactions/application-commands#bulk-overwrite-global-application-commands",children:"PUT route"}),". Wherever your commands directory is located, publish will override the existing application commands at Discord. Existing commands do not count towards the command limit creation daily."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["You may pass these in as command line arguments as well. ",(0,s.jsx)(n.strong,{children:"CLI arguments take precedence."}),"\nIf you do not know how to obtain either of these credentials, ",(0,s.jsx)(n.a,{href:"https://github.com/reactiflux/discord-irc/wiki/Creating-a-discord-bot-&-getting-a-token",children:"click here"})]}),"\n",(0,s.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"usage",src:i(8295).A+"",width:"1171",height:"470"})}),"\n",(0,s.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Automatically syncs api with your command base"}),"\n",(0,s.jsxs)(n.li,{children:["generates JSON file of output (",(0,s.jsx)(n.strong,{children:".sern/command-data-remote.json"}),")"]}),"\n",(0,s.jsx)(n.li,{children:"supports publishing direct esm typescript files"}),"\n",(0,s.jsx)(n.li,{children:"commonjs + javascript users need to compile first and then run sern publish on the dist/ output"}),"\n",(0,s.jsx)(n.li,{children:"prerequire scripts."}),"\n",(0,s.jsx)(n.li,{children:"supports a configuration that is the same as the original publish plugin."}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Each command file can have an extra config that follows ",(0,s.jsx)(n.code,{children:"ValidPublishOptions"}),":"]}),"\n",(0,s.jsx)(n.h2,{id:"config",children:"Config"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"\ntype ValidMemberPermissions = \n    | PermissionFlagBits  //discord.js enum\n    | PermissionFlagBits[]  //array of discord.js enum\n    | string //must be a stringified number\n    | bigint\n\ninterface PublishConfig {\n    guildIds?: string[];\n\tdmPermission?: boolean;\n\tdefaultMemberPermissions: ValidMemberPermissions;\n}\ntype ValidPublishOptions = \n    | PublishConfig\n    | (absPath: string, module: CommandModule) => PublishConfig\n"})}),"\n",(0,s.jsx)(n.p,{children:"In other words, you can export a function or object."}),"\n",(0,s.jsx)(n.h2,{id:"prerequiring",children:"Prerequiring"}),"\n",(0,s.jsxs)(n.p,{children:["Is there a ",(0,s.jsx)(n.a,{href:"../guide/walkthrough/services",children:"service"})," that is required at the top level of a command?"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Create an ES6 script anywhere:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:'title="scripts/prerequire.mjs"',children:"import { makeDependencies, single, Service } from '@sern/handler'\nimport { Client } from 'discord.js'\n\nawait makeDependencies({\n  build: (root) =>\n    root.add({ \"@sern/client\": single(() => new Client(...options)) }),\n});\n\nawait Service('@sern/client').login()\n"})}),"\n",(0,s.jsx)(n.p,{children:"This will create a container for publishing. (as of 0.6.0, client is required or this will crash)"}),"\n",(0,s.jsx)(n.h3,{id:"example-command-published-in-guild",children:"Example: command published in guild"}),"\n",(0,s.jsx)(n.h4,{id:"script-ran",children:"Script ran:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sern commands publish -i ./scripts/prerequire.mjs\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",metastring:"title=src/commands/ping.ts",children:"import { commandModule, Service, CommandType } from '@sern/handler'\n\nconst client = Service('@sern/client');\n\nexport const config = { \n    guildIds: [\"889026545715400705\"]\n}\n\nexport default commandModule( {\n    type: CommandType.Slash\n    description: `${client.user.username}'s ping`,\n    execute: (ctx) => { \n        ctx.reply('pong')\n    }\n})\n\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8295:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/Code_-_Insiders_2kTVzm0uIQ-76ace605cf3a0c5b7a55cb2c5228fcfa.gif"},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var s=i(6540);const r={},t=s.createContext(r);function l(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);